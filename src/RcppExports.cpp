// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// order_d_matrix
Eigen::VectorXi order_d_matrix(Eigen::MatrixXd& d);
RcppExport SEXP _starve_order_d_matrix(SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(order_d_matrix(d));
    return rcpp_result_gen;
END_RCPP
}
// lowest_k
Eigen::VectorXi lowest_k(const Eigen::VectorXd& d, const int k);
RcppExport SEXP _starve_lowest_k(SEXP dSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(lowest_k(d, k));
    return rcpp_result_gen;
END_RCPP
}
// dist_to_dag
SEXP dist_to_dag(const Eigen::Map<Eigen::MatrixXd>& d, const int n_neighbours);
RcppExport SEXP _starve_dist_to_dag(SEXP dSEXP, SEXP n_neighboursSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const int >::type n_neighbours(n_neighboursSEXP);
    rcpp_result_gen = Rcpp::wrap(dist_to_dag(d, n_neighbours));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_starve_order_d_matrix", (DL_FUNC) &_starve_order_d_matrix, 1},
    {"_starve_lowest_k", (DL_FUNC) &_starve_lowest_k, 2},
    {"_starve_dist_to_dag", (DL_FUNC) &_starve_dist_to_dag, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_starve(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
